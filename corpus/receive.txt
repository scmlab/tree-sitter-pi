==================
Simple
==================

name = c?x . end

---

(program
    (proc_declaration (simple_name)
        (recv (name)
            (clause (pattern (simple_name)) (end)))))

==================
Complex - 1
==================

name = c?{ A -> end }

---

(program
    (proc_declaration (simple_name)
        (recv (name)
            (clause (pattern (label)) (end)))))

==================
Complex - 2
==================

name = c?{ A -> end
         ; B -> end
         }

---

(program
    (proc_declaration (simple_name)
        (recv (name)
            (clause (pattern (label)) (end))
            (clause (pattern (label)) (end)))))

==================
Complex - 3
==================

name = c?{ A -> c?{ A -> end
                  ; B -> end
                  }
         ; B -> end
         }

---

(program
    (proc_declaration (simple_name)
        (recv (name)
            (clause (pattern (label)) (recv (name)
                    (clause (pattern (label)) (end))
                    (clause (pattern (label)) (end))))
            (clause (pattern (label)) (end)))))

==================
Parenthesized
==================

name = (c?x . end)

---

(program
    (proc_declaration (simple_name)
        (recv (name)
            (clause (pattern (simple_name)) (end)))))

==================
Call
==================

name = c?x . name

---

(program
    (proc_declaration (simple_name)
        (recv (name)
            (clause (pattern (simple_name)) (call (simple_name))))))

==================
New channel - 1
==================

name = (nu x) c?x . end

---

(program
    (proc_declaration (simple_name)
        (nu (simple_name)
            (recv (name)
                (clause (pattern (simple_name)) (end))))))

==================
New channel - 2
==================

name =  c?x . (nu x) end

---

(program
    (proc_declaration (simple_name)
        (recv (name)
            (clause (pattern (simple_name)) (nu (simple_name) (end))))))

==================
Parellel - 1
==================

name =  (nu x) end | end

---

(program
    (proc_declaration (simple_name)
        (par
            (nu (simple_name)
                (end))
            (end))))

==================
Parellel - 2
==================

name =  (nu x) (end | end)

---

(program
    (proc_declaration (simple_name)
        (nu (simple_name)
            (par
                (end)
                (end)))))
